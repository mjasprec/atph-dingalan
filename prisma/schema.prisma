// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch","fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model PrivateHouse {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  title String
  image String
  country String
  state String
  city String
  locationDescription String
  freeParking Boolean @default(true)
  freeWifi Boolean @default(true)
  freeToiletries Boolean @default(true)
  airCondition Boolean @default(true)
  television Boolean @default(true)
  extraBeds Boolean @default(true)
  waterDispenser Boolean @default(true)
  swimmingPool Boolean @default(true)
  karaoke Boolean @default(true)
  shack Boolean @default(true)
  publishedAt DateTime @default(now())
  updatedAt DateTime @default(now())
  rooms Room[]
  bookings Booking[]

  @@fulltext([title])
}

model Room {
  id String @id @default(uuid()) @map("_id")
  title String
  description String
  bedCount Int @default(0)
  kingBed Int @default(0)
  queenBed Int @default(0)
  twinBed Int @default(0)
  bathRoomCount Int @default(0)
  guessCount Int @default(0)
  image String
  television Boolean @default(false)
  airCondition Boolean @default(true)

  
  privateHouse PrivateHouse? @relation(fields: [privateHouseId], references: [id], onDelete: Cascade)
  privateHouseId String        @db.ObjectId

  booking Booking[]

  @@index([privateHouseId])
}

model Booking {
  id String @id @default(uuid()) @map("_id")
  userName String
  userId String
  hotelOwnerId String
  startDate DateTime
  endDate DateTime
  breakFastIncluded Boolean @default(false)
  currency String
  totalPrice Int
  paymentStatus Boolean @default(false)
  paymentIntent String @unique
  bookedAt DateTime @default(now())

  privateHouse PrivateHouse? @relation(fields: [privateHouseId], references: [id])
  privateHouseId String @db.ObjectId

  room Room? @relation(fields: [roomId], references: [id])
  roomId String

  @@index([privateHouseId])
  @@index([roomId])
}
